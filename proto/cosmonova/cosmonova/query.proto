syntax = "proto3";

package cosmonova.cosmonova;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "cosmonova/cosmonova/params.proto";
import "cosmonova/cosmonova/report.proto";

option go_package = "cosmonova/x/cosmonova/types";

// Query defines the gRPC querier service.
service Query {
  
  // Parameters queries the parameters of the module.
  rpc Params (QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/cosmonova/cosmonova/params";
  
  }
  
  // Queries a list of RetrieveValue items.
  rpc RetrieveValue (QueryRetrieveValueRequest) returns (QueryRetrieveValueResponse) {
    option (google.api.http).get = "/cosmonova/cosmonova/retrieve_value/{queryId}/{timestamp}";
  
  }
  
  // Queries a list of RetrieveValueAll items.
  rpc RetrieveValueAll (QueryRetrieveValueAllRequest) returns (QueryRetrieveValueAllResponse) {
    option (google.api.http).get = "/cosmonova/cosmonova/retrieve_value_all";
  
  }
}
// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryRetrieveValueRequest {
  string queryId   = 1;
  uint64 timestamp = 2;
}

message QueryRetrieveValueResponse {
  Report report = 1;
}

message QueryRetrieveValueAllRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryRetrieveValueAllResponse {
  repeated Report                                 report     = 1 [(gogoproto.nullable) = false];
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

